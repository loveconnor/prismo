{
  "name": "coding-0e613db2",
  "title": "Introduction to Programming Fundamentals",
  "description": "Learn core coding concepts including variables, data types, control flow, and functions through interactive exercises and hands-on practice.",
  "skills": [
    "coding"
  ],
  "widgets": [
    {
      "id": "step-prompt",
      "metadata": {
        "id": "step-prompt",
        "title": "Welcome to Coding Fundamentals",
        "description": "Displays task or question text with optional formatting",
        "skills": [
          "comprehension",
          "reading"
        ],
        "difficulty": 2,
        "estimated_time": 30,
        "input_type": "text",
        "output_type": "scaffold",
        "dependencies": [],
        "adaptive_hooks": {
          "difficulty_adjustment": true,
          "hint_progression": false
        },
        "version": "1.0.0",
        "category": "core"
      },
      "props": {
        "title": "Welcome to Coding Fundamentals",
        "prompt": "In this module, you'll learn the essential building blocks of programming. We'll start with variables and data types, then explore how to write functions and control program flow. By the end, you'll be able to write simple programs that solve real problems.",
        "estimatedTime": 30
      },
      "position": 1,
      "dependencies_met": true
    },
    {
      "id": "feedback-box",
      "metadata": {
        "id": "feedback-box",
        "title": "Feedback Box",
        "description": "Shows correctness, explanation, and next steps",
        "skills": [
          "reflection",
          "learning"
        ],
        "difficulty": 2,
        "estimated_time": 45,
        "input_type": "text",
        "output_type": "feedback",
        "dependencies": [],
        "adaptive_hooks": {
          "difficulty_adjustment": true
        },
        "version": "1.0.0",
        "category": "core"
      },
      "props": {
        "type": "info",
        "title": "Let's Get Started",
        "message": "You're about to begin your coding journey. Take your time and don't rush through the concepts.",
        "explanation": "Programming is a skill that improves with practice. Each exercise builds on previous knowledge.",
        "nextSteps": [
          "Review the learning objectives",
          "Complete the first code exercise",
          "Check your understanding with a quiz"
        ]
      },
      "dependencies_met": true
    },
    {
      "id": "confidence-meter",
      "metadata": {
        "id": "confidence-meter",
        "title": "Confidence Meter",
        "description": "Self-rating slider for confidence assessment",
        "skills": [
          "self-assessment",
          "metacognition"
        ],
        "difficulty": 2,
        "estimated_time": 20,
        "input_type": "slider",
        "output_type": "progress",
        "dependencies": [],
        "adaptive_hooks": {
          "difficulty_adjustment": true
        },
        "version": "1.0.0",
        "category": "core"
      },
      "props": {
        "minLabel": "Not confident",
        "maxLabel": "Very confident",
        "question": "How confident are you about starting to learn programming?"
      },
      "dependencies_met": true
    },
    {
      "id": "code-editor",
      "metadata": {
        "id": "code-editor",
        "title": "Code Editor",
        "description": "Interactive code editor with run and reset functionality",
        "skills": [
          "programming",
          "debugging",
          "syntax"
        ],
        "difficulty": 3,
        "estimated_time": 300,
        "input_type": "code",
        "output_type": "visualization",
        "dependencies": [],
        "adaptive_hooks": {
          "difficulty_adjustment": true,
          "hint_progression": true,
          "alternative_widgets": [
            "step-prompt"
          ]
        },
        "version": "1.0.0",
        "category": "coding"
      },
      "props": {
        "title": "Exercise 1: Variables and Data Types",
        "language": "python",
        "starterCode": "# Create variables to store different types of data\nname = \"Alice\"\nage = 25\nheight = 5.6\nis_student = True\n\n# Print the variables\nprint(\"Name:\", name)\nprint(\"Age:\", age)\nprint(\"Height:\", height)\nprint(\"Is Student:\", is_student)",
        "testCases": [
          {
            "input": "",
            "expectedOutput": "Name: Alice\nAge: 25\nHeight: 5.6\nIs Student: True",
            "description": "Run the code to see variable output"
          }
        ],
        "prompt": "Run the code to see how variables store different types of data. Try modifying the values and see what happens."
      },
      "position": 2,
      "dependencies_met": true
    },
    {
      "id": "feedback-box",
      "metadata": {
        "id": "feedback-box",
        "title": "Feedback Box",
        "description": "Shows correctness, explanation, and next steps",
        "skills": [
          "reflection",
          "learning"
        ],
        "difficulty": 2,
        "estimated_time": 45,
        "input_type": "text",
        "output_type": "feedback",
        "dependencies": [],
        "adaptive_hooks": {
          "difficulty_adjustment": true
        },
        "version": "1.0.0",
        "category": "core"
      },
      "props": {
        "type": "success",
        "title": "Great Job!",
        "message": "You've successfully run your first program with variables. Variables are containers that store data values.",
        "explanation": "Python supports different data types: strings (text), integers (whole numbers), floats (decimals), and booleans (true/false). Each variable holds one type of data.",
        "nextSteps": [
          "Learn about arithmetic operations",
          "Try creating your own variables",
          "Move to control flow structures"
        ]
      },
      "dependencies_met": true
    },
    {
      "id": "confidence-meter",
      "metadata": {
        "id": "confidence-meter",
        "title": "Confidence Meter",
        "description": "Self-rating slider for confidence assessment",
        "skills": [
          "self-assessment",
          "metacognition"
        ],
        "difficulty": 2,
        "estimated_time": 20,
        "input_type": "slider",
        "output_type": "progress",
        "dependencies": [],
        "adaptive_hooks": {
          "difficulty_adjustment": true
        },
        "version": "1.0.0",
        "category": "core"
      },
      "props": {
        "minLabel": "Not confident",
        "maxLabel": "Very confident",
        "question": "How confident are you with variables and data types?"
      },
      "dependencies_met": true
    },
    {
      "id": "code-editor",
      "metadata": {
        "id": "code-editor",
        "title": "Code Editor",
        "description": "Interactive code editor with run and reset functionality",
        "skills": [
          "programming",
          "debugging",
          "syntax"
        ],
        "difficulty": 3,
        "estimated_time": 300,
        "input_type": "code",
        "output_type": "visualization",
        "dependencies": [],
        "adaptive_hooks": {
          "difficulty_adjustment": true,
          "hint_progression": true,
          "alternative_widgets": [
            "step-prompt"
          ]
        },
        "version": "1.0.0",
        "category": "coding"
      },
      "props": {
        "title": "Exercise 2: Writing Your First Function",
        "language": "python",
        "starterCode": "# Define a function that adds two numbers\ndef add_numbers(a, b):\n    result = a + b\n    return result\n\n# Call the function with different values\nsum1 = add_numbers(5, 3)\nsum2 = add_numbers(10, 20)\n\nprint(\"5 + 3 =\", sum1)\nprint(\"10 + 20 =\", sum2)",
        "testCases": [
          {
            "input": "",
            "expectedOutput": "5 + 3 = 8\n10 + 20 = 30",
            "description": "Function should correctly add two numbers"
          }
        ],
        "prompt": "Modify the function to create a multiply_numbers function. Test it by multiplying 4 and 7."
      },
      "position": 3,
      "dependencies_met": true
    },
    {
      "id": "feedback-box",
      "metadata": {
        "id": "feedback-box",
        "title": "Feedback Box",
        "description": "Shows correctness, explanation, and next steps",
        "skills": [
          "reflection",
          "learning"
        ],
        "difficulty": 2,
        "estimated_time": 45,
        "input_type": "text",
        "output_type": "feedback",
        "dependencies": [],
        "adaptive_hooks": {
          "difficulty_adjustment": true
        },
        "version": "1.0.0",
        "category": "core"
      },
      "props": {
        "type": "success",
        "title": "Excellent Work!",
        "message": "You've created and called your first function. Functions are reusable blocks of code that perform specific tasks.",
        "explanation": "Functions help organize code, reduce repetition, and make programs easier to understand. They take input (parameters), process it, and return output.",
        "nextSteps": [
          "Learn about control flow with if statements",
          "Practice writing functions with multiple parameters",
          "Explore loops and iteration"
        ]
      },
      "dependencies_met": true
    },
    {
      "id": "confidence-meter",
      "metadata": {
        "id": "confidence-meter",
        "title": "Confidence Meter",
        "description": "Self-rating slider for confidence assessment",
        "skills": [
          "self-assessment",
          "metacognition"
        ],
        "difficulty": 2,
        "estimated_time": 20,
        "input_type": "slider",
        "output_type": "progress",
        "dependencies": [],
        "adaptive_hooks": {
          "difficulty_adjustment": true
        },
        "version": "1.0.0",
        "category": "core"
      },
      "props": {
        "minLabel": "Not confident",
        "maxLabel": "Very confident",
        "question": "How confident are you with writing and calling functions?"
      },
      "dependencies_met": true
    }
  ],
  "completion_criteria": {
    "required_widgets": [
      "step-prompt",
      "code-editor",
      "code-editor"
    ],
    "min_completion_percentage": 80,
    "max_attempts": 3,
    "time_limit": 1800
  },
  "estimated_duration": 1800,
  "version": "1.0.0",
  "_metadata": {
    "generated_at": "2025-10-26T05:14:20.340402",
    "module_id": "caaabb4a-4262-4cce-8f64-918715902751",
    "saved_to_filesystem": true
  }
}