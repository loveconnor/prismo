{
  "name": "coding-bee4297b",
  "title": "Master Loops in Python: From Basics to Practice",
  "description": "Learn how to use loops to automate repetitive tasks in Python. Master for and while loops, understand loop control, and practice with real-world examples.",
  "skills": [
    "loop",
    "coding"
  ],
  "widgets": [
    {
      "id": "step-prompt",
      "metadata": {
        "id": "step-prompt",
        "title": "Understanding Loops",
        "description": "Displays task or question text with optional formatting",
        "skills": [
          "comprehension",
          "reading"
        ],
        "difficulty": 2,
        "estimated_time": 30,
        "input_type": "text",
        "output_type": "scaffold",
        "dependencies": [],
        "adaptive_hooks": {
          "difficulty_adjustment": true,
          "hint_progression": false
        },
        "version": "1.0.0",
        "category": "core"
      },
      "props": {
        "title": "What are Loops?",
        "prompt": "Loops allow you to repeat code multiple times without writing it over and over. In Python, there are two main types: for loops (for a known number of repetitions) and while loops (until a condition is false). Let's start by learning how for loops work."
      },
      "position": 1,
      "dependencies_met": true
    },
    {
      "id": "feedback-box",
      "metadata": {
        "id": "feedback-box",
        "title": "Feedback Box",
        "description": "Shows correctness, explanation, and next steps",
        "skills": [
          "reflection",
          "learning"
        ],
        "difficulty": 2,
        "estimated_time": 45,
        "input_type": "text",
        "output_type": "feedback",
        "dependencies": [],
        "adaptive_hooks": {
          "difficulty_adjustment": true
        },
        "version": "1.0.0",
        "category": "core"
      },
      "props": {
        "type": "info",
        "title": "Key Concepts",
        "message": "You've learned the basics of loops. Loops are fundamental to programming and let you write efficient, clean code.",
        "explanation": "Understanding loops is essential because many real-world tasks require repeating actions. From processing data to generating sequences, loops are everywhere in coding.",
        "nextSteps": [
          "See a for loop in action with code examples",
          "Practice writing your first loop"
        ]
      },
      "dependencies_met": true
    },
    {
      "id": "confidence-meter",
      "metadata": {
        "id": "confidence-meter",
        "title": "Confidence Meter",
        "description": "Self-rating slider for confidence assessment",
        "skills": [
          "self-assessment",
          "metacognition"
        ],
        "difficulty": 2,
        "estimated_time": 20,
        "input_type": "slider",
        "output_type": "progress",
        "dependencies": [],
        "adaptive_hooks": {
          "difficulty_adjustment": true
        },
        "version": "1.0.0",
        "category": "core"
      },
      "props": {
        "question": "How confident are you about the basic concept of loops?",
        "minLabel": "Not confident",
        "maxLabel": "Very confident"
      },
      "dependencies_met": true
    },
    {
      "id": "code-editor",
      "metadata": {
        "id": "code-editor",
        "title": "Code Editor",
        "description": "Interactive code editor with run and reset functionality",
        "skills": [
          "programming",
          "debugging",
          "syntax"
        ],
        "difficulty": 3,
        "estimated_time": 300,
        "input_type": "code",
        "output_type": "visualization",
        "dependencies": [],
        "adaptive_hooks": {
          "difficulty_adjustment": true,
          "hint_progression": true,
          "alternative_widgets": [
            "step-prompt"
          ]
        },
        "version": "1.0.0",
        "category": "coding"
      },
      "props": {
        "title": "Write Your First For Loop",
        "language": "python",
        "starterCode": "# Write a for loop that prints numbers 1 through 5\nfor i in range(1, 6):\n    print(i)",
        "testCases": [
          {
            "input": "",
            "expectedOutput": "1\n2\n3\n4\n5",
            "description": "Should print numbers 1 through 5, each on a new line"
          }
        ]
      },
      "position": 2,
      "dependencies_met": true
    },
    {
      "id": "feedback-box",
      "metadata": {
        "id": "feedback-box",
        "title": "Feedback Box",
        "description": "Shows correctness, explanation, and next steps",
        "skills": [
          "reflection",
          "learning"
        ],
        "difficulty": 2,
        "estimated_time": 45,
        "input_type": "text",
        "output_type": "feedback",
        "dependencies": [],
        "adaptive_hooks": {
          "difficulty_adjustment": true
        },
        "version": "1.0.0",
        "category": "core"
      },
      "props": {
        "type": "success",
        "title": "Excellent!",
        "message": "Your for loop works perfectly! You've successfully created your first loop.",
        "explanation": "The range(1, 6) function generates numbers from 1 up to (but not including) 6. The loop variable 'i' takes each value in turn, and print(i) displays it. This pattern is the foundation of loop programming.",
        "nextSteps": [
          "Try modifying the loop to print different numbers",
          "Learn how while loops work",
          "Practice with list iteration"
        ]
      },
      "dependencies_met": true
    },
    {
      "id": "confidence-meter",
      "metadata": {
        "id": "confidence-meter",
        "title": "Confidence Meter",
        "description": "Self-rating slider for confidence assessment",
        "skills": [
          "self-assessment",
          "metacognition"
        ],
        "difficulty": 2,
        "estimated_time": 20,
        "input_type": "slider",
        "output_type": "progress",
        "dependencies": [],
        "adaptive_hooks": {
          "difficulty_adjustment": true
        },
        "version": "1.0.0",
        "category": "core"
      },
      "props": {
        "question": "How confident are you about writing for loops?",
        "minLabel": "Not confident",
        "maxLabel": "Very confident"
      },
      "dependencies_met": true
    },
    {
      "id": "code-editor",
      "metadata": {
        "id": "code-editor",
        "title": "Code Editor",
        "description": "Interactive code editor with run and reset functionality",
        "skills": [
          "programming",
          "debugging",
          "syntax"
        ],
        "difficulty": 3,
        "estimated_time": 300,
        "input_type": "code",
        "output_type": "visualization",
        "dependencies": [],
        "adaptive_hooks": {
          "difficulty_adjustment": true,
          "hint_progression": true,
          "alternative_widgets": [
            "step-prompt"
          ]
        },
        "version": "1.0.0",
        "category": "coding"
      },
      "props": {
        "title": "Loop Through a List",
        "language": "python",
        "starterCode": "# Loop through a list of fruits and print each one\nfruits = [\"apple\", \"banana\", \"cherry\", \"date\"]\nfor fruit in fruits:\n    print(fruit)",
        "testCases": [
          {
            "input": "",
            "expectedOutput": "apple\nbanana\ncherry\ndate",
            "description": "Should print each fruit on a new line"
          }
        ]
      },
      "position": 3,
      "dependencies_met": true
    },
    {
      "id": "feedback-box",
      "metadata": {
        "id": "feedback-box",
        "title": "Feedback Box",
        "description": "Shows correctness, explanation, and next steps",
        "skills": [
          "reflection",
          "learning"
        ],
        "difficulty": 2,
        "estimated_time": 45,
        "input_type": "text",
        "output_type": "feedback",
        "dependencies": [],
        "adaptive_hooks": {
          "difficulty_adjustment": true
        },
        "version": "1.0.0",
        "category": "core"
      },
      "props": {
        "type": "success",
        "title": "Perfect!",
        "message": "You've mastered looping through lists! This is one of the most common loop patterns in Python.",
        "explanation": "When you loop through a list using 'for item in list', Python automatically assigns each element to the loop variable in order. This is much cleaner than using indices and is preferred in Python.",
        "nextSteps": [
          "Challenge: Create a loop that sums numbers in a list",
          "Learn about nested loops",
          "Explore loop control with break and continue"
        ]
      },
      "dependencies_met": true
    },
    {
      "id": "confidence-meter",
      "metadata": {
        "id": "confidence-meter",
        "title": "Confidence Meter",
        "description": "Self-rating slider for confidence assessment",
        "skills": [
          "self-assessment",
          "metacognition"
        ],
        "difficulty": 2,
        "estimated_time": 20,
        "input_type": "slider",
        "output_type": "progress",
        "dependencies": [],
        "adaptive_hooks": {
          "difficulty_adjustment": true
        },
        "version": "1.0.0",
        "category": "core"
      },
      "props": {
        "question": "How confident are you about working with loops in Python?",
        "minLabel": "Not confident",
        "maxLabel": "Very confident"
      },
      "dependencies_met": true
    }
  ],
  "completion_criteria": {
    "required_widgets": [
      "step-prompt",
      "code-editor"
    ],
    "min_completion_percentage": 80,
    "max_attempts": 3,
    "time_limit": 1800
  },
  "estimated_duration": 1800,
  "version": "1.0.0",
  "_metadata": {
    "generated_at": "2025-10-26T05:18:11.638292",
    "module_id": "11c2fc0c-c18f-40c7-888c-1daacf043d1a",
    "saved_to_filesystem": true
  }
}